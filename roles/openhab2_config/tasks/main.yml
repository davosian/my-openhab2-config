- include_vars: main.yml

- name: See if configurations is a directory (then we nuke it next)
  shell: "[ -d {{ openhab_configuration_dir  }}] && echo 'Directory' || echo ''"
  register: is_directory

- name: create openHAB configrations directories
  file: path={{ openhab_configuration_dir}}/{{ item }} state=directory
  become: yes
  become_user: openhab
  with_items:
    - items
    - persistence
    - transform
    - rules
    - scripts
    - sitemaps
    - templates
    - services
    - things    

- name: sync setup into config
  template: dest={{ openhab_configuration_dir }}/{{item}} src=../templates/configurations/{{item}}
  become: yes
  become_user: openhab          
  with_items:
        - items/huset.items
        - items/systeminfo.items
        - items/power.items
        - items/weather.items
        - items/floorHeating.items
        - items/roomba.items
        - items/alarm.items
        - items/speedtest.items
        - persistence/rrd4j.persist
        - persistence/influxdb.persist
        - rules/garage.rules
        - rules/heating.rules
        - rules/lights.rules
        - rules/proximity.rules
        - rules/security.rules
        - rules/status.rules
        - rules/modes.rules
        - rules/power.rules
        - rules/plex.rules
        - rules/weather.rules
        - rules/roomba.rules
        - rules/alarm.rules
        - rules/speedtest.rules
        - scripts/pushMessages.script
        - scripts/alarm-climate.js
        - scripts/alarm.js
        - sitemaps/default.sitemap
        - transform/en.map
        - transform/getBasicOnOffState.js
        - transform/getLastUpdate.js
        - transform/getLastValue.js
        - transform/getLevelValue.js
        - transform/getPowerValue.js
        - transform/getValValue.js
        - transform/motion.map
        - transform/no.map
        - transform/floor.map
        - transform/alarm.map
        - transform/roomba.map
        - transform/roombaStatus.map
        - services/samsungac.cfg
        - services/http.cfg
        - services/pushover.cfg
        - services/addons.cfg
        - services/influxdb.cfg
        - services/plex.cfg
        - services/rfxcom.cfg
        - services/denon.cfg
        - services/weather.cfg
        - services/runtime.cfg
        - services/addons.cfg
        - things/astro.things
        - things/systeminfo.things
        - things/samsungtv.things
        - things/hue.things
        - things/rfxcom.things

- name: sync alarm-api script into configurations
  become: yes
  become_user: openhab
  copy: dest={{ openhab_configuration_dir }}/scripts/alarm-api.js src=../templates/configurations/scripts/alarm-api.js

- name: create openHAB configurations/transform directory
  file: >
    state=directory
    path={{ openhab_configuration_dir }}/transform

- name: sync transform setup into config
  copy: dest={{ openhab_configuration_dir }}/{{item}} src=../templates/configurations/{{item}}
  become: yes
  become_user: openhab
  with_fileglob:
        - transform/*
