
var Timer timerHeater = null

rule "Disable fetching of status when status has arrived"
	when Item leaf_last_updated changed or
		Item leaf_charging_status changed or
		Item leaf_battery changed
then
	if (leaf_request_update.state == ON) {
		sendCommand(leaf_request_update, OFF)
		if (mode.state == 0) {
			var String charging = ''
			if (leaf_charging_status.state.toString == 'NOT_CHARGING')
				charging = 'IKKE '
			postUpdate(push_message_text, "Leaf har " + leaf_battery.state + "% batteri og står "+ charging +"på lading")
		}
	}

	if (OutdoorTemperature.state < -5 && leaf_connected.state == '') {
		sendNotification("{{stein_email}}", "Det er kaldt ute, kanskje skru på varmeapparetet på bilen?")
	}
end

rule "Check battery in evening"
	when
		Time cron "0 0 21 ? * MON-SUN"
	then
	if (mode.state != 2) {
		if (leaf_charging_status.state == OFF && leaf_battery.state <= 50) {
			postUpdate(push_message_text,"Leaf har " + leaf_battery.state + "% batteri og står IKKE på lading")
		}
	}
end

rule "Stop requesting climate control to be switched OFF after 16 minutes"
	when 
		Item leaf_heating changed to ON
	then
		if (timerHeater == null) {
			timerHeater = createTimer(now.plusMinutes(16)) [|
					sendCommand(leaf_heating, OFF)
					if(timerHeater != null) {
						if(timerHeater.running) {
							timerHeater.cancel()
						}
						timerHeater= null
					}
					sendNotification("{{stein_email}}", "Varmeappart ferdig med å sende..")
				]
		} else {
			if(timerHeater.running) {
				timerHeater.cancel()
			}
			timerHeater= null
		}
end
